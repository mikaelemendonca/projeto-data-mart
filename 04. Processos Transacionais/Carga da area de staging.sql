-------------- DIA UTIL E FIM DE SEMANA
CREATE PROCEDURE RETORNADIAUTILFIMSEMANA(@NOMEDIA VARCHAR(20), @FS CHAR(3) OUTPUT, @DIAU CHAR(3) OUTPUT)
AS
IF (@NOMEDIA = 'sábado' or @NOMEDIA = 'domingo')
BEGIN
	SET @FS = 'SIM' 
	SET @DIAU = 'NAO'
END

-------------- SEMESTRE E NOME SEMESTRE
CREATE PROCEDURE RETORNASEMESTRE(@M INT, @A INT, @S SMALLINT OUTPUT, @NS VARCHAR(20) OUTPUT)
AS
IF (@M > 6)
BEGIN
	SET @S = 2
	SET @NS = '2° Semestre / ' + CAST(@A AS VARCHAR(8))
END
ELSE
BEGIN
	SET @S = 1
	SET @NS = '1° Semestre / ' + CAST(@A AS VARCHAR(8))
END

-------------- FERIADOS
CREATE PROCEDURE RETORNAFERIADO(@M SMALLINT, @D SMALLINT, @F CHAR(3) OUTPUT)
AS
IF (@M = 1 AND @D = 1  OR @M =  3 AND @D = 30 OR
	@M = 4 AND @D = 21 OR @M =  5 AND @D =  1 OR 
	@M = 9 AND @D = 7  OR @M = 10 AND @D = 12 OR
	@M = 11 AND @D = 2 OR @M = 11 AND @D = 15 OR @M = 12 AND @D = 25)
BEGIN
	SET @F = 'SIM'
END
ELSE
BEGIN
	SET @F = 'NAO'
END

-------------- PREECHENDO A AUXILIAR DE TEMPO
CREATE PROCEDURE SP_AUX_TEMPO(@DATA_CARGA DATE, @DATEINICIAL DATE, @DATEFINAL DATE)
AS
SET LANGUAGE 'PORTUGUES' 
DECLARE 
	@DATE DATE, @DIA SMALLINT, @MES SMALLINT, @ANO INT, @NOMEMES VARCHAR(20),
	@SEMESTRE SMALLINT,	@FIMMES CHAR(3), @NOMEDIA VARCHAR(20), @FERIADO CHAR(3), @R INT,
	@NOMESEMESTRE VARCHAR(20), @ID INT, @FIMSEMANA CHAR(3), @DIAUTIL CHAR(3), 
	@DATEFIMMES DATE, @NIVEL VARCHAR(15)

SET @DATE = @DATEINICIAL
WHILE(@DATEFINAL >= @DATE)
	BEGIN
		SET @R = (SELECT IDAUX_TEMPO FROM STG.AUX_TEMPO WHERE DATA = CAST(@DATE AS DATE))					
		IF (@R IS NOT NULL)
			BEGIN
				PRINT 'Data já inserida no banco'
				BREAK
			END
		ELSE
			BEGIN
				SET @DIA = DATEPART(DD, @DATE)
				SET @NOMEDIA = DATENAME(DW, @DATE) 
				SET @MES = DATEPART(MM, @DATE)
				SET @ANO = DATEPART(YY, @DATE)
				SET @DATEFIMMES = EOMONTH(@DATE)
				SET @NOMEMES = DATENAME(MM, @DATE)
				SET @FERIADO = 'NAO'
				SET @FIMMES = 'NAO'
				SET @FIMSEMANA = 'NAO' 
				SET @DIAUTIL = 'SIM'
				SET @NIVEL = 'DIA'

				EXEC RETORNAFERIADO @MES, @DIA, @FERIADO OUTPUT
				EXEC RETORNADIAUTILFIMSEMANA @NOMEDIA, @FIMSEMANA OUTPUT, @DIAUTIL OUTPUT	

				IF (@FERIADO = 'SIM') SET @DIAUTIL = 'NAO'
				IF (@DATE = @DATEFIMMES) SET @FIMMES = 'SIM'

				EXEC RETORNASEMESTRE @MES, @ANO, @SEMESTRE OUTPUT, @NOMESEMESTRE OUTPUT

				INSERT INTO STG.AUX_TEMPO VALUES (@DATA_CARGA, @NIVEL, @DATE, @DIA, @NOMEDIA, @DIAUTIL, @FERIADO, @FIMSEMANA, @MES, @NOMEMES, @SEMESTRE, @NOMESEMESTRE, @ANO)
		
				IF (@FIMMES = 'SIM')
					BEGIN
						SET @NIVEL = 'MES'
						IF (NOT EXISTS(SELECT * FROM STG.AUX_TEMPO WHERE NIVEL = @NIVEL AND MES = @MES))
						BEGIN
							INSERT INTO STG.AUX_TEMPO VALUES (@DATA_CARGA, @NIVEL, NULL, NULL, NULL, NULL, NULL, NULL, @MES, @NOMEMES, @SEMESTRE, @NOMESEMESTRE, @ANO)
						END
						IF (@MES = 12 OR @MES = DATEPART(MM, @DATEFINAL))
							BEGIN
								SET @NIVEL = 'ANO'
								IF (NOT EXISTS(SELECT * FROM STG.AUX_TEMPO WHERE NIVEL = @NIVEL AND ANO = @ANO))
								BEGIN
									INSERT INTO STG.AUX_TEMPO VALUES (@DATA_CARGA, @NIVEL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, @ANO)
								END
							END
					END
			END
		SET @DATE = DATEADD(DD, 1, @DATE)
	END


EXEC SP_AUX_TEMPO '20181017', '2018-01-01', '2018-10-30'
SELECT * FROM STG.AUX_TEMPO
TRUNCATE TABLE STG.AUX_TEMPO


-------------- OLTP PARA STAGING -------------- 

-------------- PROCEDIMENTO
CREATE PROCEDURE SP_OLTP_PROCEDIMENTO (@DATA DATE)
AS
DELETE FROM STG.AUX_PROCEDIMENTO WHERE DATA_CARGA = @DATA
INSERT INTO STG.AUX_PROCEDIMENTO
SELECT @DATA, ID_PROCEDIMENTO, NOME, VALOR, DT_AUDITORIA, ATUALIZADO
FROM OLTP.TB_PROCEDIMENTO
EXEC SP_VIOLACAO_PROCEDIMENTO

EXEC SP_OLTP_PROCEDIMENTO '20181017'
SELECT * FROM STG.AUX_PROCEDIMENTO
UPDATE STG.AUX_PROCEDIMENTO SET ATUALIZADO = 'N' WHERE DATA_CARGA = '20181013'

-------------- CLINICA
CREATE PROCEDURE SP_OLTP_CLINICA (@DATA DATE)
AS
DELETE FROM STG.AUX_CLINICA WHERE DATA_CARGA = @DATA
INSERT INTO STG.AUX_CLINICA
SELECT @DATA, ID_CLINICA, RAZAO_SOCIAL, CNPJ
FROM OLTP.TB_CLINICA
EXEC SP_VIOLACAO_CLINICA

EXEC SP_OLTP_CLINICA '20181017'
SELECT * FROM STG.AUX_CLINICA


-------------- MEDICO
CREATE PROCEDURE SP_OLTP_MEDICO (@DATA DATE)
AS
DELETE FROM STG.AUX_MEDICO WHERE DATA_CARGA = @DATA
INSERT INTO STG.AUX_MEDICO
SELECT @DATA, M.ID_MEDICO, M.NOME, M.CRM, E.NOME
FROM OLTP.TB_MEDICO M
INNER JOIN OLTP.TB_ESPECIALIDADE E
ON (M.TB_ESPECIALIDADE_ID_ESPECIALIDADE = E.ID_ESPECIALIDADE)
--EXEC SP_VIOLACAO_MEDICO

EXEC SP_OLTP_MEDICO '20181017'
SELECT * FROM STG.AUX_MEDICO


-------------- STATUS
CREATE PROCEDURE SP_OLTP_STATUS (@DATA DATE)
AS
DELETE FROM STG.AUX_STATUS WHERE DATA_CARGA = @DATA
INSERT INTO STG.AUX_STATUS VALUES
(@DATA, 'MA'),
(@DATA, 'CO'),
(@DATA, 'RE'),
(@DATA, 'CA')

EXEC SP_OLTP_STATUS '20181018'
SELECT * FROM STG.AUX_STATUS
TRUNCATE TABLE STG.AUX_STATUS
UPDATE STG.AUX_MEDICO SET DATA_CARGA = '20001014'


-------------- AGENDAMENTO
ALTER PROCEDURE SP_OLTP_AGENDAMENTO (@DATA DATE)
AS
DELETE FROM STG.FATO_AGENDAMENTO WHERE DATA_CARGA = @DATA
INSERT INTO STG.FATO_AGENDAMENTO
SELECT @DATA, PA.ID_PROC_AGENDADO, T.IDAUX_TEMPO, AP.ID_PROCEDIMENTO, AC.ID_CLINICA, AM.ID_MEDICO, S.IDAUX_STATUS, 1, PA.DT_AUDITORIA, PA.ATUALIZADO
FROM OLTP.TB_PROC_AGENDADO PA
INNER JOIN STG.AUX_STATUS S ON (S.NOME = PA.STATUS)
INNER JOIN OLTP.TB_DIA D ON (D.ID_DIA = PA.TB_DIA_ID_DIA)
INNER JOIN STG.AUX_TEMPO T ON (T.DATA = D.DATA)
INNER JOIN OLTP.TB_AGENDA A ON (A.ID_AGENDA = D.TB_AGENDA_ID_AGENDA)
INNER JOIN OLTP.TB_PROCEDIMENTO P ON (A.TB_PROCEDIMENTO_ID_PROCEDIMENTO = P.ID_PROCEDIMENTO)
INNER JOIN STG.AUX_PROCEDIMENTO AP ON (P.ID_PROCEDIMENTO = AP.ID_PROCEDIMENTO)
INNER JOIN OLTP.TB_CLINICA C ON (C.ID_CLINICA = A.TB_MEDICO_TB_CLINICA_TB_CLINICA_ID_CLINICA)
INNER JOIN STG.AUX_CLINICA AC ON (C.ID_CLINICA = AC.ID_CLINICA)
INNER JOIN OLTP.TB_MEDICO M ON (M.ID_MEDICO = A.TB_MEDICO_TB_CLINICA_TB_MEDICO_ID_MEDICO)
INNER JOIN STG.AUX_MEDICO AM ON (M.ID_MEDICO = AM.ID_MEDICO)

EXEC SP_OLTP_AGENDAMENTO '20181017'
SELECT * FROM STG.FATO_AGENDAMENTO
SELECT * FROM OLTP.TB_PROC_AGENDADO
TRUNCATE TABLE STG.FATO_AGENDAMENTO


-------------- VIOLACOES -------------- 

-------------- CLINICA
CREATE PROCEDURE SP_VIOLACAO_CLINICA
AS
INSERT INTO STG.VIOLACAO_AUX_CLINICA
SELECT DATA_CARGA, IDAUX_CLINICA, ID_CLINICA, RAZAO_SOCIAL, CNPJ, 'FALTA CNPF' FROM STG.AUX_CLINICA
WHERE CNPJ IS NULL
DELETE FROM STG.AUX_CLINICA WHERE CNPJ IS NULL
INSERT INTO STG.VIOLACAO_AUX_CLINICA
SELECT DATA_CARGA, IDAUX_CLINICA, ID_CLINICA, RAZAO_SOCIAL, CNPJ, 'FALTA ID' FROM STG.AUX_CLINICA
WHERE ID_CLINICA IS NULL
DELETE FROM STG.AUX_CLINICA WHERE ID_CLINICA IS NULL

EXEC SP_VIOLACAO_MEDICO
SELECT * FROM STG.VIOLACAO_AUX_CLINICA
SELECT * FROM STG.AUX_CLINICA


-------------- MEDICO
CREATE PROCEDURE SP_VIOLACAO_MEDICO
AS
INSERT INTO STG.VIOLACAO_AUX_MEDICO
SELECT DATA_CARGA, IDAUX_MEDICO, ID_MEDICO, NOME, CRM, ESPECIALIDADE 'FALTA CRM' 
FROM STG.AUX_MEDICO
WHERE CRM IS NULL
DELETE FROM STG.AUX_MEDICO WHERE CRM IS NULL
INSERT INTO STG.VIOLACAO_AUX_MEDICO
SELECT DATA_CARGA, IDAUX_MEDICO, ID_MEDICO, NOME, CRM, ESPECIALIDADE, 'FALTA ID' 
FROM STG.AUX_MEDICO
WHERE ID_MEDICO IS NULL
DELETE FROM STG.AUX_MEDICO WHERE ID_MEDICO IS NULL

EXEC SP_VIOLACAO_MEDICO
SELECT * FROM STG.AUX_MEDICO
SELECT * FROM STG.VIOLACAO_AUX_MEDICO


-------------- PROCEDIMENTO
CREATE PROCEDURE SP_VIOLACAO_PROCEDIMENTO
AS
INSERT INTO STG.VIOLACAO_AUX_PROCEDIMENTO
SELECT DATA_CARGA, IDAUX_PROCEDIMENTO, ID_PROCEDIMENTO, NOME, VALOR, 'FALTA NOME', DT_AUDITORIA, ATUALIZADO 
FROM STG.AUX_PROCEDIMENTO
WHERE NOME IS NULL
DELETE FROM STG.AUX_PROCEDIMENTO WHERE NOME IS NULL
INSERT INTO STG.VIOLACAO_AUX_PROCEDIMENTO
SELECT DATA_CARGA, IDAUX_PROCEDIMENTO, ID_PROCEDIMENTO, NOME, VALOR, 'FALTA VALOR', DT_AUDITORIA, ATUALIZADO 
FROM STG.AUX_PROCEDIMENTO
WHERE VALOR IS NULL
DELETE FROM STG.AUX_PROCEDIMENTO WHERE VALOR IS NULL
INSERT INTO STG.VIOLACAO_AUX_PROCEDIMENTO
SELECT DATA_CARGA, IDAUX_PROCEDIMENTO, ID_PROCEDIMENTO, NOME, VALOR, 'FALTA ID', DT_AUDITORIA, ATUALIZADO 
FROM STG.AUX_PROCEDIMENTO
WHERE ID_PROCEDIMENTO IS NULL
DELETE FROM STG.AUX_PROCEDIMENTO WHERE ID_PROCEDIMENTO IS NULL

EXEC SP_VIOLACAO_MEDICO
SELECT * FROM STG.AUX_PROCEDIMENTO


-------------- STATUS
ALTER PROCEDURE SP_VIOLACAO_STATUS (@DATA_CARGA DATE, @STATUS CHAR(2))
AS
IF (NOT EXISTS (SELECT * FROM STG.AUX_STATUS WHERE NOME = @STATUS))
	INSERT INTO STG.VIOLACAO_AUX_STATUS VALUES (@DATA_CARGA, @STATUS, 'FALTA STATUS')

EXEC SP_VIOLACAO_STATUS '20170801', 'DA'
SELECT * FROM STG.VIOLACAO_AUX_STATUS


-------------- TEMPO
CREATE PROCEDURE SP_VIOLACAO_TEMPO (@DATA_CARGA DATE, @DATA DATE)
AS
IF (NOT EXISTS (SELECT * FROM STG.AUX_TEMPO WHERE DATA = @DATA))
	INSERT INTO STG.VIOLACAO_AUX_TEMPO VALUES (@DATA_CARGA, @DATA, 'FALTA DATA')
	
EXEC SP_VIOLACAO_TEMPO '20180801','20150101'
SELECT * FROM STG.VIOLACAO_AUX_TEMPO
TRUNCATE TABLE STG.VIOLACAO_AUX_TEMPO


-------------- AGENDAMENTO
CREATE PROCEDURE SP_VIOLACAO_AGENDAMENTO (@DATA_CARGA DATE, @DATA DATE, @STATUS CHAR(2))
AS
EXEC SP_VIOLACAO_TEMPO @DATA_CARGA, @DATA
EXEC SP_VIOLACAO_STATUS @DATA_CARGA, @STATUS


